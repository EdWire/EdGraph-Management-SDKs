/*
 * Management Api
 *
 * Api to help platform wide items such as users, tenants, applications, subscriptions, etc.
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EdGraph.Management.Client.Client;
using EdGraph.Management.Client.Api;
// uncomment below to import models
//using EdGraph.Management.Client.Model;

namespace EdGraph.Management.Client.Test.Api
{
    /// <summary>
    ///  Class for testing OpenIdClientsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OpenIdClientsApiTests : IDisposable
    {
        private OpenIdClientsApi instance;

        public OpenIdClientsApiTests()
        {
            instance = new OpenIdClientsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OpenIdClientsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OpenIdClientsApi
            //Assert.IsType<OpenIdClientsApi>(instance);
        }

        /// <summary>
        /// Test CreateClientAsync
        /// </summary>
        [Fact]
        public void CreateClientAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? apiVersion = null;
            //string? xVersion = null;
            //IdentityApiClientV1CreateClientRequest? identityApiClientV1CreateClientRequest = null;
            //var response = instance.CreateClientAsync(apiVersion, xVersion, identityApiClientV1CreateClientRequest);
            //Assert.IsType<IdentityApiClientV1ClientCreatedResponse>(response);
        }

        /// <summary>
        /// Test CreateOrUpdateClientAsync
        /// </summary>
        [Fact]
        public void CreateOrUpdateClientAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //IdentityApiClientV1UpdateClientRequest? identityApiClientV1UpdateClientRequest = null;
            //var response = instance.CreateOrUpdateClientAsync(clientId, apiVersion, xVersion, identityApiClientV1UpdateClientRequest);
            //Assert.IsType<IdentityApiClientV1UpdateClientRequest>(response);
        }

        /// <summary>
        /// Test DeleteClientAsync
        /// </summary>
        [Fact]
        public void DeleteClientAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.DeleteClientAsync(clientId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test GetAllClientsAsync
        /// </summary>
        [Fact]
        public void GetAllClientsAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetAllClientsAsync(pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<IdentityApiClientV1ClientListResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetClientProfileByIdAsync
        /// </summary>
        [Fact]
        public void GetClientProfileByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetClientProfileByIdAsync(clientId, apiVersion, xVersion);
            //Assert.IsType<IdentityApiClientV1ClientProfileResponse>(response);
        }
    }
}
