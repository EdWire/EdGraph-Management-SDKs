/*
 * Management Api
 *
 * Api to help platform wide items such as users, tenants, applications, subscriptions, etc.
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EdGraph.Management.Client.Client;
using EdGraph.Management.Client.Api;
// uncomment below to import models
//using EdGraph.Management.Client.Model;

namespace EdGraph.Management.Client.Test.Api
{
    /// <summary>
    ///  Class for testing IdentityResourcesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IdentityResourcesApiTests : IDisposable
    {
        private IdentityResourcesApi instance;

        public IdentityResourcesApiTests()
        {
            instance = new IdentityResourcesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IdentityResourcesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IdentityResourcesApi
            //Assert.IsType<IdentityResourcesApi>(instance);
        }

        /// <summary>
        /// Test CreateIdentityResourceAsync
        /// </summary>
        [Fact]
        public void CreateIdentityResourceAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsCreateIdentityResourceRequest? edGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsCreateIdentityResourceRequest = null;
            //var response = instance.CreateIdentityResourceAsync(apiVersion, xVersion, edGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsCreateIdentityResourceRequest);
            //Assert.IsType<EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsResponsesIdentityResourceResponse>(response);
        }

        /// <summary>
        /// Test CreateOrUpdateIdentityResourceAsync
        /// </summary>
        [Fact]
        public void CreateOrUpdateIdentityResourceAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid identityResourceId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsUpdateIdentityResourceRequest? edGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsUpdateIdentityResourceRequest = null;
            //var response = instance.CreateOrUpdateIdentityResourceAsync(identityResourceId, apiVersion, xVersion, edGraphHttpAggregatorsManagementApiControllersV1ViewModelsRequestsUpdateIdentityResourceRequest);
            //Assert.IsType<EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsResponsesIdentityResourceResponse>(response);
        }

        /// <summary>
        /// Test DeleteIdentityResourceAsync
        /// </summary>
        [Fact]
        public void DeleteIdentityResourceAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid identityResourceId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.DeleteIdentityResourceAsync(identityResourceId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test GetAllIdentityResourcesAsync
        /// </summary>
        [Fact]
        public void GetAllIdentityResourcesAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetAllIdentityResourcesAsync(pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsResponsesIdentityResourceResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetIdentityResourceByIdAsync
        /// </summary>
        [Fact]
        public void GetIdentityResourceByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid identityResourceId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetIdentityResourceByIdAsync(identityResourceId, apiVersion, xVersion);
            //Assert.IsType<EdGraphHttpAggregatorsManagementApiControllersV1ViewModelsResponsesIdentityResourceResponse>(response);
        }
    }
}
