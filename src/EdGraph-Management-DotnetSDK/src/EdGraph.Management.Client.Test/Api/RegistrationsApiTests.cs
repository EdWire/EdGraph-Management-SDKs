/*
 * Management Api
 *
 * Api to help platform wide items such as users, tenants, applications, subscriptions, etc.
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EdGraph.Management.Client.Client;
using EdGraph.Management.Client.Api;
// uncomment below to import models
//using EdGraph.Management.Client.Model;

namespace EdGraph.Management.Client.Test.Api
{
    /// <summary>
    ///  Class for testing RegistrationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RegistrationsApiTests : IDisposable
    {
        private RegistrationsApi instance;

        public RegistrationsApiTests()
        {
            instance = new RegistrationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RegistrationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RegistrationsApi
            //Assert.IsType<RegistrationsApi>(instance);
        }

        /// <summary>
        /// Test ApproveTenantRegistrationAsync
        /// </summary>
        [Fact]
        public void ApproveTenantRegistrationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string registrationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.ApproveTenantRegistrationAsync(registrationId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test CreateTenantRegistrationAsync
        /// </summary>
        [Fact]
        public void CreateTenantRegistrationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? apiVersion = null;
            //string? xVersion = null;
            //RegistrationApiRegistrationV1CreateTenantRegistrationRequest? registrationApiRegistrationV1CreateTenantRegistrationRequest = null;
            //var response = instance.CreateTenantRegistrationAsync(apiVersion, xVersion, registrationApiRegistrationV1CreateTenantRegistrationRequest);
            //Assert.IsType<RegistrationApiRegistrationV1TenantRegistrationCreatedResponse>(response);
        }

        /// <summary>
        /// Test DeleteTenantRegistrationAsync
        /// </summary>
        [Fact]
        public void DeleteTenantRegistrationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string registrationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //RegistrationApiRegistrationV1DeleteTenantRegistrationRequest? registrationApiRegistrationV1DeleteTenantRegistrationRequest = null;
            //instance.DeleteTenantRegistrationAsync(registrationId, apiVersion, xVersion, registrationApiRegistrationV1DeleteTenantRegistrationRequest);
        }

        /// <summary>
        /// Test DenyTenantRegistrationAsync
        /// </summary>
        [Fact]
        public void DenyTenantRegistrationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string registrationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //RegistrationApiRegistrationV1DenyTenantRegistrationRequest? registrationApiRegistrationV1DenyTenantRegistrationRequest = null;
            //instance.DenyTenantRegistrationAsync(registrationId, apiVersion, xVersion, registrationApiRegistrationV1DenyTenantRegistrationRequest);
        }

        /// <summary>
        /// Test GetAllTenantRegistrationsAsync
        /// </summary>
        [Fact]
        public void GetAllTenantRegistrationsAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetAllTenantRegistrationsAsync(pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<RegistrationApiRegistrationV1RegistrationListResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetAzureSubscriptionAsync
        /// </summary>
        [Fact]
        public void GetAzureSubscriptionAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? subscriptionStoragePath = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetAzureSubscriptionAsync(subscriptionStoragePath, apiVersion, xVersion);
            //Assert.IsType<RegistrationApiRegistrationV1AzureSubscription>(response);
        }

        /// <summary>
        /// Test GetOnboardingApplicationsAsync
        /// </summary>
        [Fact]
        public void GetOnboardingApplicationsAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetOnboardingApplicationsAsync(pageSize, pageIndex, orderBy, apiVersion, xVersion);
            //Assert.IsType<ApplicationApiApplicationV1PaginatedItemsResponse>(response);
        }

        /// <summary>
        /// Test GetTenantRegistrationByIdAsync
        /// </summary>
        [Fact]
        public void GetTenantRegistrationByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string registrationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetTenantRegistrationByIdAsync(registrationId, apiVersion, xVersion);
            //Assert.IsType<RegistrationApiRegistrationV1RegistrationProfileResponse>(response);
        }

        /// <summary>
        /// Test UpdateTenantRegistrationAsync
        /// </summary>
        [Fact]
        public void UpdateTenantRegistrationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string registrationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //RegistrationApiRegistrationV1UpdateTenantRegistrationRequest? registrationApiRegistrationV1UpdateTenantRegistrationRequest = null;
            //var response = instance.UpdateTenantRegistrationAsync(registrationId, apiVersion, xVersion, registrationApiRegistrationV1UpdateTenantRegistrationRequest);
            //Assert.IsType<RegistrationApiRegistrationV1TenantRegistrationUpdatedResponse>(response);
        }
    }
}
