openapi: 3.0.1
info:
  description: "Api to help platform wide items such as users, tenants, applications,\
    \ subscriptions, etc."
  title: Management Api
  version: v1.0
servers:
- url: https://api.edgraph.com/management
security:
- oauth2:
  - https://api.edgraph.com/auth/management
paths:
  /apiresources/{apiResourceId}:
    delete:
      operationId: DeleteApiResourceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: apiResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes an OpenId Api Resource
      tags:
      - Api Resources
    get:
      operationId: GetApiResourceByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: apiResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific OpenId Api Resource
      tags:
      - Api Resources
    put:
      operationId: CreateOrUpdateApiResourceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: apiResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Adds or Updates an OpenId Api Resource
      tags:
      - Api Resources
  /apiresources:
    get:
      operationId: GetAllApiResourcesAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: Name ASC
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of OpenId Api Resources
      tags:
      - Api Resources
    post:
      operationId: CreateApiResourceAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new OpenId Api Resource
      tags:
      - Api Resources
  /datasync/jobtypes/{jobTypeId}/profiles/{profileId}:
    delete:
      operationId: DeleteDataSyncProfileAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a profile assigned to the DataSync job type
      tags:
      - DataSync
    put:
      operationId: UpdateDataSyncProfileAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.ProfileUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a profile assigned to the DataSync job type
      tags:
      - DataSync
  /datasync/jobtypes/{jobTypeId}/profiles:
    post:
      operationId: CreateDataSyncProfileAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.ProfileCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new profile assigned to the DataSync job type
      tags:
      - DataSync
  /datasync/jobtypes/{jobTypeId}:
    delete:
      operationId: DeleteDataSyncJobTypeAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a DataSync job type
      tags:
      - DataSync
    get:
      operationId: GetDataSyncJobTypeProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobTypeProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific DataSync job type
      tags:
      - DataSync
    put:
      operationId: UpdateDataSyncJobTypeAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: jobTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobTypeUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a DataSync job type
      tags:
      - DataSync
  /datasync/jobtypes:
    get:
      operationId: GetAllDataSyncJobTypesAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of DataSync job types
      tags:
      - DataSync
    post:
      operationId: CreateDataSyncJobTypeAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobTypeCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new DataSync job type
      tags:
      - DataSync
  /datasync/providers/{providerId}/connectiontypes/{connectionTypeId}:
    delete:
      operationId: DeleteDataSyncConnectionTypeAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectionTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a connection type assigned to the DataSync provider
      tags:
      - DataSync
    put:
      operationId: UpdateDataSyncConnectionTypeAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectionTypeId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a connection type assigned to the DataSync provider
      tags:
      - DataSync
  /datasync/providers/{providerId}/connectiontypes:
    post:
      operationId: CreateDataSyncConnectionTypeAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new connection type assigned to the DataSync provider
      tags:
      - DataSync
  /datasync/providers/{providerId}:
    delete:
      operationId: DeleteDataSyncProviderAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a DataSync provider
      tags:
      - DataSync
    get:
      operationId: GetDataSyncProviderProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ProviderProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific DataSync provider
      tags:
      - DataSync
    put:
      operationId: UpdateDataSyncProviderAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ProviderUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a DataSync provider
      tags:
      - DataSync
  /datasync/providers:
    get:
      operationId: GetAllDataSyncProvidersAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of DataSync providers
      tags:
      - DataSync
    post:
      operationId: CreateDataSyncProviderAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncApi.Provider.V1.ProviderCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new DataSync provider
      tags:
      - DataSync
  /identityresources/{identityResourceId}:
    delete:
      operationId: DeleteIdentityResourceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: identityResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes an OpenId Identity Resource
      tags:
      - Identity Resources
    get:
      operationId: GetIdentityResourceByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: identityResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific OpenId Identity Resource
      tags:
      - Identity Resources
    put:
      operationId: CreateOrUpdateIdentityResourceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: identityResourceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Adds or Updates an OpenId Identity Resource
      tags:
      - Identity Resources
  /identityresources:
    get:
      description: Referenced from IdentityServer4
      operationId: GetAllIdentityResourcesAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: Name ASC
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of OpenId Identity Resources
      tags:
      - Identity Resources
    post:
      operationId: CreateIdentityResourceAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new OpenId Identity Resource
      tags:
      - Identity Resources
  /migrations/applications/up:
    post:
      operationId: ApplicationsMigrateUpAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.MigrateUpRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.MigrateUpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.MigrateUpRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.MigrateUpRequest'
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: "Applies a migration, upgrading the data."
      tags:
      - Migrations
  /migrations/edfiadmin/up:
    post:
      operationId: EdFiAdminMigrateUpAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest'
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: "Applies a migration, upgrading the data."
      tags:
      - Migrations
  /clients/{clientId}:
    delete:
      operationId: DeleteClientAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes a OpenId client
      tags:
      - OpenId Clients
    get:
      operationId: GetClientProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.Client.V1.ClientProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific OpenId client
      tags:
      - OpenId Clients
    put:
      operationId: CreateOrUpdateClientAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Adds or Updates a OpenId client
      tags:
      - OpenId Clients
  /clients:
    get:
      operationId: GetAllClientsAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of OpenId Clients
      tags:
      - OpenId Clients
    post:
      operationId: CreateClientAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.CreateClientRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.CreateClientRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.CreateClientRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.Client.V1.CreateClientRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.Client.V1.ClientCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new OpenId client
      tags:
      - OpenId Clients
  /registrations/{registrationId}/approve:
    put:
      operationId: ApproveTenantRegistrationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request
      summary: Approve a tenant's registration request
      tags:
      - Registrations
  /registrations/{registrationId}/deny:
    put:
      operationId: DenyTenantRegistrationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request
      summary: Deny a tenant's registration request
      tags:
      - Registrations
  /registrations/{registrationId}:
    delete:
      operationId: DeleteTenantRegistrationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a tenant's registration request
      tags:
      - Registrations
    get:
      operationId: GetTenantRegistrationByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationApi.Registration.V1.RegistrationProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific tenant registration using its primary key
      tags:
      - Registrations
    put:
      operationId: UpdateTenantRegistrationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request
      summary: Update a tenant's registration request
      tags:
      - Registrations
  /registrations/applications:
    get:
      operationId: GetOnboardingApplicationsAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Gets a list of applications available for registration/onboarding
      tags:
      - Registrations
  /registrations/azure/subscriptions:
    get:
      operationId: GetAzureSubscriptionAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: subscriptionStoragePath
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationApi.Registration.V1.AzureSubscription'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Gets an Azure Subscription
      tags:
      - Registrations
  /registrations:
    get:
      operationId: GetAllTenantRegistrationsAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of registrations
      tags:
      - Registrations
    post:
      operationId: CreateTenantRegistrationAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Create a registration on behalf of a user/tenant
      tags:
      - Registrations
  /tenants/{tenantId}/applications/{applicationId}/launchersettings:
    get:
      operationId: GetTenantApplicationLauncherSettingsByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationLauncherSettingsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific application associated to a tenant
      tags:
      - Tenants
    put:
      operationId: UpdateTenantApplicationLauncherSettingsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationLauncherSettingsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationLauncherSettingsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationLauncherSettingsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationLauncherSettingsRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Update a tenant's application launcher settings
      tags:
      - Tenants
  /tenants/{tenantId}/applications/{applicationId}/publish:
    put:
      operationId: PublishTenantApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationPublishedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Publish a tenant's application
      tags:
      - Tenants
  /tenants/{tenantId}/applications/{applicationId}:
    delete:
      operationId: DeleteApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.DeleteApplicationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.DeleteApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.DeleteApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.DeleteApplicationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Delete a tenant's application
      tags:
      - Tenants
    get:
      operationId: GetTenantApplicationProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific application associated to a tenant
      tags:
      - Tenants
    put:
      operationId: UpdateTenantApplicationProfileAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.UpdateApplicationProfileRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Update a tenant's application profile
      tags:
      - Tenants
  /tenants/{tenantId}/applications:
    get:
      operationId: GetTenantApplicationsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of tenant applications
      tags:
      - Tenants
    post:
      operationId: CreateTenantApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.CreateApplicationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.CreateApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.CreateApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationApi.Application.V2.CreateApplicationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Create a tenant's application
      tags:
      - Tenants
  /tenants/{tenantId}/subscriptions/{subscriptionId}/activate:
    put:
      operationId: ActivateTenantSubscriptionAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionActivatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Activate a Tenant Subscription
      tags:
      - Tenants
  /tenants/{tenantId}/subscriptions/{subscriptionId}/deactivate:
    put:
      operationId: DeactivateTenantSubscriptionAsyncAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionDeactivatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deactivate a Tenant Subscription
      tags:
      - Tenants
  /tenants/{tenantId}/subscriptions/{subscriptionId}/reject:
    put:
      operationId: RejectTenantSubscriptionAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionRejectedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Reject a Tenant Subscription
      tags:
      - Tenants
  /tenants/{tenantId}/subscriptions/{subscriptionId}:
    delete:
      operationId: DeleteTenantSubscriptionAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes a Tenant Subscription
      tags:
      - Tenants
    get:
      operationId: GetTenantSubscriptionProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse'
          description: The requested resource was successfully retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
        "400":
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a specific Tenant Subscription
      tags:
      - Tenants
    put:
      operationId: UpdateTenantSubscriptionAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a Tenant Subscription
      tags:
      - Tenants
  /tenants/{tenantId}/subscriptions:
    get:
      operationId: GetAllTenantSubscriptionsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of Tenant Subscriptions
      tags:
      - Tenants
    post:
      operationId: CreateTenantSubscriptionAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new Tenant Subscription
      tags:
      - Tenants
  /tenants/{tenantId}:
    delete:
      operationId: DeleteTenantAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes a tenant
      tags:
      - Tenants
    get:
      operationId: GetTenantByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific tenant
      tags:
      - Tenants
    put:
      operationId: UpdateTenantAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Updates a tenant
      tags:
      - Tenants
  /tenants:
    get:
      operationId: GetAllTenantsAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of tenants
      tags:
      - Tenants
    post:
      operationId: CreateTenantAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new tenant
      tags:
      - Tenants
  /users/{userId}/disableuserbrowserdebug:
    put:
      operationId: DisableUserBrowserDebugAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserBrowserDebugDisabledResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Disable browser debug for a user
      tags:
      - Users
  /users/{userId}/enableuserbrowserdebug:
    put:
      operationId: EnableUserBrowserDebugAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserBrowserDebugEnabledResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Enable browser debug for a user
      tags:
      - Users
  /users/{userId}:
    delete:
      operationId: DeleteUserAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Deletes a user
      tags:
      - Users
    get:
      operationId: GetUserProfileByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a specific user
      tags:
      - Users
    put:
      operationId: UpdateUserAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.UpdateUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.UpdateUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.UpdateUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.UpdateUserRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates or Updates a user
      tags:
      - Users
  /users:
    get:
      operationId: GetAllUsersAsync
      parameters:
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of users
      tags:
      - Users
    post:
      operationId: CreateLocalUserAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates a new user
      tags:
      - Users
components:
  schemas:
    ApplicationApi.Application.V1.ApplicationListResponse:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        roles:
        - isDefault: true
          roleName: roleName
        - isDefault: true
          roleName: roleName
        lastModifiedBy: lastModifiedBy
        groups: groups
        createdDateTime: createdDateTime
        version: version
        tags: tags
        isInternal: true
        applicationStatus: null
        createdBy: createdBy
        tenantId: tenantId
        applicationId: applicationId
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        applicationName:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        tags:
          nullable: true
          type: string
        groups:
          nullable: true
          type: string
        applicationStatus:
          $ref: '#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus'
        isInternal:
          type: boolean
        roles:
          items:
            $ref: '#/components/schemas/ApplicationApi.Application.V1.Role'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V1.ApplicationStatus:
      enum:
      - Unknown
      - Draft
      - Published
      type: string
    ApplicationApi.Application.V1.PaginatedItemsResponse:
      additionalProperties: false
      example:
        data:
        - lastModifiedDateTime: lastModifiedDateTime
          roles:
          - isDefault: true
            roleName: roleName
          - isDefault: true
            roleName: roleName
          lastModifiedBy: lastModifiedBy
          groups: groups
          createdDateTime: createdDateTime
          version: version
          tags: tags
          isInternal: true
          applicationStatus: null
          createdBy: createdBy
          tenantId: tenantId
          applicationId: applicationId
          applicationName: applicationName
        - lastModifiedDateTime: lastModifiedDateTime
          roles:
          - isDefault: true
            roleName: roleName
          - isDefault: true
            roleName: roleName
          lastModifiedBy: lastModifiedBy
          groups: groups
          createdDateTime: createdDateTime
          version: version
          tags: tags
          isInternal: true
          applicationStatus: null
          createdBy: createdBy
          tenantId: tenantId
          applicationId: applicationId
          applicationName: applicationName
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse'
          nullable: true
          readOnly: true
          type: array
      type: object
    ApplicationApi.Application.V1.Role:
      additionalProperties: false
      example:
        isDefault: true
        roleName: roleName
      properties:
        roleName:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    ApplicationApi.Application.V2.ApplicationCreatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V2.ApplicationLauncherSettingsResponse:
      additionalProperties: false
      example:
        darkBackgroundTileUrl: darkBackgroundTileUrl
        lightOverlayTileUrl: lightOverlayTileUrl
        showInAppLauncher: true
        lightBackgroundTileUrl: lightBackgroundTileUrl
        showInQuickLauncher: true
        lightIconUrl: lightIconUrl
        darkIconUrl: darkIconUrl
        tenantId: tenantId
        applicationId: applicationId
        darkOverlayTileUrl: darkOverlayTileUrl
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        lightIconUrl:
          nullable: true
          type: string
        darkIconUrl:
          nullable: true
          type: string
        lightBackgroundTileUrl:
          nullable: true
          type: string
        darkBackgroundTileUrl:
          nullable: true
          type: string
        lightOverlayTileUrl:
          nullable: true
          type: string
        darkOverlayTileUrl:
          nullable: true
          type: string
        showInAppLauncher:
          type: boolean
        showInQuickLauncher:
          type: boolean
      type: object
    ApplicationApi.Application.V2.ApplicationProfileResponse:
      additionalProperties: false
      example:
        applicationType: null
        lastModifiedDateTime: lastModifiedDateTime
        clientId: clientId
        tooltipText: tooltipText
        roles:
        - isDefault: true
          roleName: roleName
        - isDefault: true
          roleName: roleName
        lastModifiedBy: lastModifiedBy
        groups: groups
        createdDateTime: createdDateTime
        version: version
        tags: tags
        applicationStatus: null
        applicationDescription: applicationDescription
        createdBy: createdBy
        subscriptionType: subscriptionType
        tenantId: tenantId
        applicationUri: applicationUri
        applicationId: applicationId
        applicationName: applicationName
        openInNewWindow: true
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        applicationType:
          $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationType'
        applicationName:
          nullable: true
          type: string
        applicationUri:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        tooltipText:
          nullable: true
          type: string
        applicationDescription:
          nullable: true
          type: string
        tags:
          nullable: true
          type: string
        groups:
          nullable: true
          type: string
        applicationStatus:
          $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationStatus'
        openInNewWindow:
          type: boolean
        roles:
          items:
            $ref: '#/components/schemas/ApplicationApi.Application.V2.Role'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        subscriptionType:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V2.ApplicationPublishedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V2.ApplicationStatus:
      enum:
      - Unknown
      - Draft
      - Published
      type: string
    ApplicationApi.Application.V2.ApplicationType:
      enum:
      - Unknown
      - SSO
      - Link
      type: string
    ApplicationApi.Application.V2.ApplicationUpdatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V2.CreateApplicationRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        applicationType:
          $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationType'
        applicationName:
          nullable: true
          type: string
        applicationUri:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        tooltipText:
          nullable: true
          type: string
        applicationDescription:
          nullable: true
          type: string
        tags:
          nullable: true
          type: string
        groups:
          nullable: true
          type: string
        lightIconUrl:
          nullable: true
          type: string
        darkIconUrl:
          nullable: true
          type: string
        lightBackgroundTileUrl:
          nullable: true
          type: string
        darkBackgroundTileUrl:
          nullable: true
          type: string
        lightOverlayTileUrl:
          nullable: true
          type: string
        darkOverlayTileUrl:
          nullable: true
          type: string
        showInAppLauncher:
          type: boolean
        showInQuickLauncher:
          type: boolean
        openInNewWindow:
          type: boolean
        roles:
          items:
            $ref: '#/components/schemas/ApplicationApi.Application.V2.Role'
          nullable: true
          readOnly: true
          type: array
      type: object
    ApplicationApi.Application.V2.DeleteApplicationRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    ApplicationApi.Application.V2.MigrateUpRequest:
      additionalProperties: false
      properties:
        migrationCode:
          nullable: true
          type: string
        continueOnErrors:
          type: boolean
      type: object
    ApplicationApi.Application.V2.Role:
      additionalProperties: false
      example:
        isDefault: true
        roleName: roleName
      properties:
        roleName:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    ApplicationApi.Application.V2.UpdateApplicationLauncherSettingsRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        lightIconUrl:
          nullable: true
          type: string
        darkIconUrl:
          nullable: true
          type: string
        lightBackgroundTileUrl:
          nullable: true
          type: string
        darkBackgroundTileUrl:
          nullable: true
          type: string
        lightOverlayTileUrl:
          nullable: true
          type: string
        darkOverlayTileUrl:
          nullable: true
          type: string
        showInAppLauncher:
          type: boolean
        showInQuickLauncher:
          type: boolean
      type: object
    ApplicationApi.Application.V2.UpdateApplicationProfileRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        applicationType:
          $ref: '#/components/schemas/ApplicationApi.Application.V2.ApplicationType'
        applicationName:
          nullable: true
          type: string
        applicationUri:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        tooltipText:
          nullable: true
          type: string
        applicationDescription:
          nullable: true
          type: string
        tags:
          nullable: true
          type: string
        groups:
          nullable: true
          type: string
        openInNewWindow:
          type: boolean
        roles:
          items:
            $ref: '#/components/schemas/ApplicationApi.Application.V2.Role'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.JobType.V1.CreateJobTypeRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        jobPoints:
          format: int32
          type: integer
        hasChildJobs:
          type: boolean
        childJobField:
          nullable: true
          type: string
        sourceConnectionTypeId:
          nullable: true
          type: string
        destinationConnectionTypeId:
          nullable: true
          type: string
        sourceConnectionRequired:
          type: boolean
        destinationConnectionRequired:
          type: boolean
        jobMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.JobType.V1.CreateProfileRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        actorType:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.DeleteJobTypeRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.DeleteProfileRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.JobMetadataField:
      additionalProperties: false
      example:
        isSecret: true
        code: code
        tab: tab
        defaultValue: defaultValue
        display: true
        values: values
        label: label
        api: api
        type: type
        validation: validation
        order: order
      properties:
        tab:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        validation:
          nullable: true
          type: string
        order:
          nullable: true
          type: string
        display:
          type: boolean
        defaultValue:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        values:
          nullable: true
          type: string
        api:
          nullable: true
          type: string
        isSecret:
          type: boolean
      type: object
    DataSyncApi.JobType.V1.JobTypeCreatedResponse:
      additionalProperties: false
      example:
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.JobTypeListResponse:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        sourceConnectionRequired: true
        createdBy: createdBy
        sourceConnectionTypeId: sourceConnectionTypeId
        destinationConnectionTypeId: destinationConnectionTypeId
        destinationConnectionRequired: true
        lastModifiedBy: lastModifiedBy
        name: name
        profiles:
        - actorType: actorType
          profileId: profileId
          name: name
          description: description
          jobTypeId: jobTypeId
        - actorType: actorType
          profileId: profileId
          name: name
          description: description
          jobTypeId: jobTypeId
        createdDateTime: createdDateTime
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        sourceConnectionTypeId:
          nullable: true
          type: string
        destinationConnectionTypeId:
          nullable: true
          type: string
        sourceConnectionRequired:
          type: boolean
        destinationConnectionRequired:
          type: boolean
        profiles:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.Profile'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - lastModifiedDateTime: lastModifiedDateTime
          sourceConnectionRequired: true
          createdBy: createdBy
          sourceConnectionTypeId: sourceConnectionTypeId
          destinationConnectionTypeId: destinationConnectionTypeId
          destinationConnectionRequired: true
          lastModifiedBy: lastModifiedBy
          name: name
          profiles:
          - actorType: actorType
            profileId: profileId
            name: name
            description: description
            jobTypeId: jobTypeId
          - actorType: actorType
            profileId: profileId
            name: name
            description: description
            jobTypeId: jobTypeId
          createdDateTime: createdDateTime
          jobTypeId: jobTypeId
        - lastModifiedDateTime: lastModifiedDateTime
          sourceConnectionRequired: true
          createdBy: createdBy
          sourceConnectionTypeId: sourceConnectionTypeId
          destinationConnectionTypeId: destinationConnectionTypeId
          destinationConnectionRequired: true
          lastModifiedBy: lastModifiedBy
          name: name
          profiles:
          - actorType: actorType
            profileId: profileId
            name: name
            description: description
            jobTypeId: jobTypeId
          - actorType: actorType
            profileId: profileId
            name: name
            description: description
            jobTypeId: jobTypeId
          createdDateTime: createdDateTime
          jobTypeId: jobTypeId
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponse'
          nullable: true
          type: array
      type: object
    DataSyncApi.JobType.V1.JobTypeProfileResponse:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        lastModifiedBy: lastModifiedBy
        profiles:
        - actorType: actorType
          profileId: profileId
          name: name
          description: description
          jobTypeId: jobTypeId
        - actorType: actorType
          profileId: profileId
          name: name
          description: description
          jobTypeId: jobTypeId
        description: description
        createdDateTime: createdDateTime
        hasChildJobs: true
        jobMetadataFields:
        - isSecret: true
          code: code
          tab: tab
          defaultValue: defaultValue
          display: true
          values: values
          label: label
          api: api
          type: type
          validation: validation
          order: order
        - isSecret: true
          code: code
          tab: tab
          defaultValue: defaultValue
          display: true
          values: values
          label: label
          api: api
          type: type
          validation: validation
          order: order
        jobPoints: 0
        sourceConnectionRequired: true
        childJobField: childJobField
        createdBy: createdBy
        sourceConnectionTypeId: sourceConnectionTypeId
        destinationConnectionTypeId: destinationConnectionTypeId
        destinationConnectionRequired: true
        name: name
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        jobPoints:
          format: int32
          type: integer
        hasChildJobs:
          type: boolean
        childJobField:
          nullable: true
          type: string
        sourceConnectionTypeId:
          nullable: true
          type: string
        destinationConnectionTypeId:
          nullable: true
          type: string
        sourceConnectionRequired:
          type: boolean
        destinationConnectionRequired:
          type: boolean
        jobMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField'
          nullable: true
          readOnly: true
          type: array
        profiles:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.Profile'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.JobTypeUpdatedResponse:
      additionalProperties: false
      example:
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.Profile:
      additionalProperties: false
      example:
        actorType: actorType
        profileId: profileId
        name: name
        description: description
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        actorType:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.ProfileCreatedResponse:
      additionalProperties: false
      example:
        profileId: profileId
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.ProfileUpdatedResponse:
      additionalProperties: false
      example:
        profileId: profileId
        jobTypeId: jobTypeId
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
      type: object
    DataSyncApi.JobType.V1.UpdateJobTypeRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        jobPoints:
          format: int32
          type: integer
        hasChildJobs:
          type: boolean
        childJobField:
          nullable: true
          type: string
        sourceConnectionTypeId:
          nullable: true
          type: string
        destinationConnectionTypeId:
          nullable: true
          type: string
        sourceConnectionRequired:
          type: boolean
        destinationConnectionRequired:
          type: boolean
        jobMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.JobType.V1.UpdateProfileRequest:
      additionalProperties: false
      properties:
        jobTypeId:
          nullable: true
          type: string
        profileId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        actorType:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ConnectionMetadataField:
      additionalProperties: false
      example:
        isSecret: true
        code: code
        tab: tab
        defaultValue: defaultValue
        display: true
        values: values
        label: label
        api: api
        type: type
        validation: validation
        order: order
      properties:
        tab:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        validation:
          nullable: true
          type: string
        order:
          nullable: true
          type: string
        display:
          type: boolean
        defaultValue:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        values:
          nullable: true
          type: string
        api:
          nullable: true
          type: string
        isSecret:
          type: boolean
      type: object
    DataSyncApi.Provider.V1.ConnectionType:
      additionalProperties: false
      example:
        providerId: providerId
        documentationUri: documentationUri
        connectionMetadataFields:
        - isSecret: true
          code: code
          tab: tab
          defaultValue: defaultValue
          display: true
          values: values
          label: label
          api: api
          type: type
          validation: validation
          order: order
        - isSecret: true
          code: code
          tab: tab
          defaultValue: defaultValue
          display: true
          values: values
          label: label
          api: api
          type: type
          validation: validation
          order: order
        name: name
        description: description
        connectionTypeId: connectionTypeId
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        documentationUri:
          nullable: true
          type: string
        connectionMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse:
      additionalProperties: false
      example:
        providerId: providerId
        connectionTypeId: connectionTypeId
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse:
      additionalProperties: false
      example:
        providerId: providerId
        connectionTypeId: connectionTypeId
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.CreateConnectionTypeRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        documentationUri:
          nullable: true
          type: string
        connectionMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.Provider.V1.CreateProviderRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        iconUri:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.DeleteConnectionTypeRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.DeleteProviderRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ProviderCreatedResponse:
      additionalProperties: false
      example:
        providerId: providerId
      properties:
        providerId:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ProviderListResponse:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        createdBy: createdBy
        providerId: providerId
        lastModifiedBy: lastModifiedBy
        name: name
        description: description
        createdDateTime: createdDateTime
        connectionTypes:
        - providerId: providerId
          documentationUri: documentationUri
          connectionMetadataFields:
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          name: name
          description: description
          connectionTypeId: connectionTypeId
        - providerId: providerId
          documentationUri: documentationUri
          connectionMetadataFields:
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          name: name
          description: description
          connectionTypeId: connectionTypeId
        iconUri: iconUri
      properties:
        providerId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        iconUri:
          nullable: true
          type: string
        connectionTypes:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionType'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - lastModifiedDateTime: lastModifiedDateTime
          createdBy: createdBy
          providerId: providerId
          lastModifiedBy: lastModifiedBy
          name: name
          description: description
          createdDateTime: createdDateTime
          connectionTypes:
          - providerId: providerId
            documentationUri: documentationUri
            connectionMetadataFields:
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            name: name
            description: description
            connectionTypeId: connectionTypeId
          - providerId: providerId
            documentationUri: documentationUri
            connectionMetadataFields:
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            name: name
            description: description
            connectionTypeId: connectionTypeId
          iconUri: iconUri
        - lastModifiedDateTime: lastModifiedDateTime
          createdBy: createdBy
          providerId: providerId
          lastModifiedBy: lastModifiedBy
          name: name
          description: description
          createdDateTime: createdDateTime
          connectionTypes:
          - providerId: providerId
            documentationUri: documentationUri
            connectionMetadataFields:
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            name: name
            description: description
            connectionTypeId: connectionTypeId
          - providerId: providerId
            documentationUri: documentationUri
            connectionMetadataFields:
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            - isSecret: true
              code: code
              tab: tab
              defaultValue: defaultValue
              display: true
              values: values
              label: label
              api: api
              type: type
              validation: validation
              order: order
            name: name
            description: description
            connectionTypeId: connectionTypeId
          iconUri: iconUri
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponse'
          nullable: true
          type: array
      type: object
    DataSyncApi.Provider.V1.ProviderProfileResponse:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        createdBy: createdBy
        providerId: providerId
        lastModifiedBy: lastModifiedBy
        name: name
        description: description
        createdDateTime: createdDateTime
        connectionTypes:
        - providerId: providerId
          documentationUri: documentationUri
          connectionMetadataFields:
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          name: name
          description: description
          connectionTypeId: connectionTypeId
        - providerId: providerId
          documentationUri: documentationUri
          connectionMetadataFields:
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          - isSecret: true
            code: code
            tab: tab
            defaultValue: defaultValue
            display: true
            values: values
            label: label
            api: api
            type: type
            validation: validation
            order: order
          name: name
          description: description
          connectionTypeId: connectionTypeId
        iconUri: iconUri
      properties:
        providerId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        iconUri:
          nullable: true
          type: string
        connectionTypes:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionType'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.ProviderUpdatedResponse:
      additionalProperties: false
      example:
        providerId: providerId
      properties:
        providerId:
          nullable: true
          type: string
      type: object
    DataSyncApi.Provider.V1.UpdateConnectionTypeRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        connectionTypeId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        documentationUri:
          nullable: true
          type: string
        connectionMetadataFields:
          items:
            $ref: '#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField'
          nullable: true
          readOnly: true
          type: array
      type: object
    DataSyncApi.Provider.V1.UpdateProviderRequest:
      additionalProperties: false
      properties:
        providerId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        iconUri:
          nullable: true
          type: string
      type: object
    EdGraph.Common.Errors.Core.ProblemDetails:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
        status:
          format: int32
          type: integer
        title:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        extensions:
          additionalProperties:
            nullable: true
          nullable: true
          readOnly: true
          type: object
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest:
      additionalProperties: false
      properties:
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest:
      additionalProperties: false
      properties:
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        showInDiscoveryDocument:
          description: Specifies whether this scope is shown in the discovery document.
            Defaults to true.
          type: boolean
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest:
      additionalProperties: false
      properties:
        id:
          description: The primary key of the resource.
          format: uuid
          type: string
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest:
      additionalProperties: false
      properties:
        id:
          description: The primary key of the resource.
          format: uuid
          type: string
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        showInDiscoveryDocument:
          description: Specifies whether this scope is shown in the discovery document.
            Defaults to true.
          type: boolean
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
      properties:
        id:
          description: The primary key of the resource.
          format: uuid
          type: string
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - displayName: displayName
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
        - displayName: displayName
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse'
          nullable: true
          type: array
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription:
      additionalProperties: false
      example:
        lastModifiedDateTime: lastModifiedDateTime
        roles:
        - isDefault: true
          roleName: roleName
        - isDefault: true
          roleName: roleName
        lastModifiedBy: lastModifiedBy
        groups: groups
        createdDateTime: createdDateTime
        version: version
        tags: tags
        isInternal: true
        isDefault: true
        applicationStatus: null
        createdBy: createdBy
        isTenantSubscribed: true
        tenantId: tenantId
        applicationTenantId: applicationTenantId
        applicationId: applicationId
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        applicationTenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        applicationName:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        tags:
          nullable: true
          type: string
        groups:
          nullable: true
          type: string
        applicationStatus:
          $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus'
        isInternal:
          type: boolean
        roles:
          items:
            $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role'
          nullable: true
          type: array
        isTenantSubscribed:
          type: boolean
        isDefault:
          type: boolean
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    ? EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel
    : additionalProperties: false
      example:
        data:
        - lastModifiedDateTime: lastModifiedDateTime
          roles:
          - isDefault: true
            roleName: roleName
          - isDefault: true
            roleName: roleName
          lastModifiedBy: lastModifiedBy
          groups: groups
          createdDateTime: createdDateTime
          version: version
          tags: tags
          isInternal: true
          isDefault: true
          applicationStatus: null
          createdBy: createdBy
          isTenantSubscribed: true
          tenantId: tenantId
          applicationTenantId: applicationTenantId
          applicationId: applicationId
          applicationName: applicationName
        - lastModifiedDateTime: lastModifiedDateTime
          roles:
          - isDefault: true
            roleName: roleName
          - isDefault: true
            roleName: roleName
          lastModifiedBy: lastModifiedBy
          groups: groups
          createdDateTime: createdDateTime
          version: version
          tags: tags
          isInternal: true
          isDefault: true
          applicationStatus: null
          createdBy: createdBy
          isTenantSubscribed: true
          tenantId: tenantId
          applicationTenantId: applicationTenantId
          applicationId: applicationId
          applicationName: applicationName
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription'
          nullable: true
          type: array
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus:
      enum:
      - Unknown
      - Draft
      - Published
      type: string
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        showInDiscoveryDocument: true
        enabled: true
      properties:
        id:
          description: The primary key of the resource.
          format: uuid
          type: string
        name:
          description: The unique name of the resource.
          nullable: true
          type: string
        displayName:
          description: Display name of the resource.
          nullable: true
          type: string
        description:
          description: Description of the resource.
          nullable: true
          type: string
        showInDiscoveryDocument:
          description: Specifies whether this scope is shown in the discovery document.
            Defaults to true.
          type: boolean
        enabled:
          description: Indicates if this resource is enabled. Defaults to true.
          type: boolean
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - displayName: displayName
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          showInDiscoveryDocument: true
          enabled: true
        - displayName: displayName
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          showInDiscoveryDocument: true
          enabled: true
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse'
          nullable: true
          type: array
      type: object
    EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role:
      additionalProperties: false
      example:
        isDefault: true
        roleName: roleName
      properties:
        roleName:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest:
      additionalProperties: false
      properties:
        migrationCode:
          nullable: true
          type: string
        continueOnErrors:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.MigrationResult:
      additionalProperties: false
      example:
        messages:
        - messages
        - messages
        succeeded: true
      properties:
        messages:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        succeeded:
          type: boolean
      type: object
    IdentityApi.Client.V1.AccessTokenType:
      enum:
      - Jwt
      - Reference
      type: string
    IdentityApi.Client.V1.Claim:
      additionalProperties: false
      example:
        type: type
        value: value
      properties:
        type:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    IdentityApi.Client.V1.ClientCreatedResponse:
      additionalProperties: false
      example:
        clientId: clientId
        tenantId: tenantId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
      type: object
    IdentityApi.Client.V1.ClientListResponse:
      additionalProperties: false
      example:
        clientUri: clientUri
        clientId: clientId
        lastModifiedDateTime: lastModifiedDateTime
        clientName: clientName
        createdBy: createdBy
        lastModifiedBy: lastModifiedBy
        tenantId: tenantId
        createdDateTime: createdDateTime
        applicationId: applicationId
        enabled: true
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientName:
          nullable: true
          type: string
        clientUri:
          nullable: true
          type: string
        enabled:
          type: boolean
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - clientUri: clientUri
          clientId: clientId
          lastModifiedDateTime: lastModifiedDateTime
          clientName: clientName
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          tenantId: tenantId
          createdDateTime: createdDateTime
          applicationId: applicationId
          enabled: true
        - clientUri: clientUri
          clientId: clientId
          lastModifiedDateTime: lastModifiedDateTime
          clientName: clientName
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          tenantId: tenantId
          createdDateTime: createdDateTime
          applicationId: applicationId
          enabled: true
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/IdentityApi.Client.V1.ClientListResponse'
          nullable: true
          type: array
      type: object
    IdentityApi.Client.V1.ClientProfileResponse:
      additionalProperties: false
      example:
        clientSecrets:
        - description: description
          expiration: expiration
          type: type
          value: value
        - description: description
          expiration: expiration
          type: type
          value: value
        lastModifiedDateTime: lastModifiedDateTime
        clientName: clientName
        identityTokenLifetime: 0
        identityProviderRestrictions:
        - identityProviderRestrictions
        - identityProviderRestrictions
        description: description
        updateAccessTokenClaimsOnRefresh: true
        createdDateTime: createdDateTime
        accessTokenType: null
        enableLocalLogin: true
        enabled: true
        alwaysIncludeUserClaimsInIdToken: true
        allowedGrantTypes:
        - allowedGrantTypes
        - allowedGrantTypes
        authorizationCodeLifetime: 1
        slidingRefreshTokenLifetime: 5
        tokenUsage: null
        postLogoutRedirectUris:
        - postLogoutRedirectUris
        - postLogoutRedirectUris
        accessTokenLifetime: 6
        clientUri: clientUri
        allowAccessTokensViaBrowser: true
        refreshTokenExpiration: null
        allowOfflineAccess: true
        clientId: clientId
        lastModifiedBy: lastModifiedBy
        absoluteRefreshTokenLifetime: 5
        logoUri: logoUri
        redirectUris:
        - redirectUris
        - redirectUris
        allowedScopes:
        - allowedScopes
        - allowedScopes
        requireClientSecret: true
        allowedCorsOrigins:
        - allowedCorsOrigins
        - allowedCorsOrigins
        createdBy: createdBy
        requireConsent: true
        tenantId: tenantId
        claims:
        - type: type
          value: value
        - type: type
          value: value
        requirePkce: true
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        clientUri:
          nullable: true
          type: string
        logoUri:
          nullable: true
          type: string
        enabled:
          type: boolean
        accessTokenType:
          $ref: '#/components/schemas/IdentityApi.Client.V1.AccessTokenType'
        tokenUsage:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenUsage'
        refreshTokenExpiration:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenExpiration'
        enableLocalLogin:
          type: boolean
        allowOfflineAccess:
          type: boolean
        allowAccessTokensViaBrowser:
          type: boolean
        updateAccessTokenClaimsOnRefresh:
          type: boolean
        alwaysIncludeUserClaimsInIdToken:
          type: boolean
        identityTokenLifetime:
          format: int32
          type: integer
        accessTokenLifetime:
          format: int32
          type: integer
        authorizationCodeLifetime:
          format: int32
          type: integer
        absoluteRefreshTokenLifetime:
          format: int32
          type: integer
        slidingRefreshTokenLifetime:
          format: int32
          type: integer
        requireClientSecret:
          type: boolean
        requireConsent:
          type: boolean
        allowedScopes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedCorsOrigins:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedGrantTypes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        identityProviderRestrictions:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        redirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        postLogoutRedirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        clientSecrets:
          items:
            $ref: '#/components/schemas/IdentityApi.Client.V1.Secret'
          nullable: true
          readOnly: true
          type: array
        claims:
          items:
            $ref: '#/components/schemas/IdentityApi.Client.V1.Claim'
          nullable: true
          readOnly: true
          type: array
        requirePkce:
          type: boolean
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    IdentityApi.Client.V1.CreateClientRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        clientUri:
          nullable: true
          type: string
        logoUri:
          nullable: true
          type: string
        enabled:
          type: boolean
        accessTokenType:
          $ref: '#/components/schemas/IdentityApi.Client.V1.AccessTokenType'
        tokenUsage:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenUsage'
        refreshTokenExpiration:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenExpiration'
        enableLocalLogin:
          type: boolean
        allowOfflineAccess:
          type: boolean
        allowAccessTokensViaBrowser:
          type: boolean
        updateAccessTokenClaimsOnRefresh:
          type: boolean
        alwaysIncludeUserClaimsInIdToken:
          type: boolean
        identityTokenLifetime:
          format: int32
          type: integer
        accessTokenLifetime:
          format: int32
          type: integer
        authorizationCodeLifetime:
          format: int32
          type: integer
        absoluteRefreshTokenLifetime:
          format: int32
          type: integer
        slidingRefreshTokenLifetime:
          format: int32
          type: integer
        requireClientSecret:
          type: boolean
        requireConsent:
          type: boolean
        allowedScopes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedCorsOrigins:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedGrantTypes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        identityProviderRestrictions:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        redirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        postLogoutRedirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        secret:
          nullable: true
          type: string
        claims:
          items:
            $ref: '#/components/schemas/IdentityApi.Client.V1.Claim'
          nullable: true
          readOnly: true
          type: array
        requirePkce:
          type: boolean
      type: object
    IdentityApi.Client.V1.Secret:
      additionalProperties: false
      example:
        description: description
        expiration: expiration
        type: type
        value: value
      properties:
        type:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        expiration:
          nullable: true
          type: string
      type: object
    IdentityApi.Client.V1.TokenExpiration:
      enum:
      - Sliding
      - Absolute
      type: string
    IdentityApi.Client.V1.TokenUsage:
      enum:
      - ReUse
      - OneTimeOnly
      type: string
    IdentityApi.Client.V1.UpdateClientRequest:
      additionalProperties: false
      example:
        clientName: clientName
        identityTokenLifetime: 0
        identityProviderRestrictions:
        - identityProviderRestrictions
        - identityProviderRestrictions
        description: description
        updateAccessTokenClaimsOnRefresh: true
        accessTokenType: null
        enableLocalLogin: true
        enabled: true
        alwaysIncludeUserClaimsInIdToken: true
        allowedGrantTypes:
        - allowedGrantTypes
        - allowedGrantTypes
        authorizationCodeLifetime: 1
        slidingRefreshTokenLifetime: 5
        tokenUsage: null
        postLogoutRedirectUris:
        - postLogoutRedirectUris
        - postLogoutRedirectUris
        accessTokenLifetime: 6
        clientUri: clientUri
        allowAccessTokensViaBrowser: true
        refreshTokenExpiration: null
        allowOfflineAccess: true
        clientId: clientId
        absoluteRefreshTokenLifetime: 5
        logoUri: logoUri
        redirectUris:
        - redirectUris
        - redirectUris
        allowedScopes:
        - allowedScopes
        - allowedScopes
        requireClientSecret: true
        allowedCorsOrigins:
        - allowedCorsOrigins
        - allowedCorsOrigins
        requireConsent: true
        tenantId: tenantId
        claims:
        - type: type
          value: value
        - type: type
          value: value
        requirePkce: true
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        clientUri:
          nullable: true
          type: string
        logoUri:
          nullable: true
          type: string
        enabled:
          type: boolean
        accessTokenType:
          $ref: '#/components/schemas/IdentityApi.Client.V1.AccessTokenType'
        tokenUsage:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenUsage'
        refreshTokenExpiration:
          $ref: '#/components/schemas/IdentityApi.Client.V1.TokenExpiration'
        enableLocalLogin:
          type: boolean
        allowOfflineAccess:
          type: boolean
        allowAccessTokensViaBrowser:
          type: boolean
        updateAccessTokenClaimsOnRefresh:
          type: boolean
        alwaysIncludeUserClaimsInIdToken:
          type: boolean
        identityTokenLifetime:
          format: int32
          type: integer
        accessTokenLifetime:
          format: int32
          type: integer
        authorizationCodeLifetime:
          format: int32
          type: integer
        absoluteRefreshTokenLifetime:
          format: int32
          type: integer
        slidingRefreshTokenLifetime:
          format: int32
          type: integer
        requireClientSecret:
          type: boolean
        requireConsent:
          type: boolean
        allowedScopes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedCorsOrigins:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        allowedGrantTypes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        identityProviderRestrictions:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        redirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        postLogoutRedirectUris:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        claims:
          items:
            $ref: '#/components/schemas/IdentityApi.Client.V1.Claim'
          nullable: true
          readOnly: true
          type: array
        requirePkce:
          type: boolean
      type: object
    IdentityApi.User.V1.CreateLocalUserRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        phoneNumber:
          nullable: true
          type: string
        lockoutEnabled:
          type: boolean
        password:
          nullable: true
          type: string
        autoGeneratedPassword:
          type: boolean
        twoFactorEnabled:
          type: boolean
      type: object
    IdentityApi.User.V1.DisableUserBrowserDebugRequest:
      additionalProperties: false
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.EnableUserBrowserDebugRequest:
      additionalProperties: false
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.LocalUserCreatedResponse:
      additionalProperties: false
      example:
        password: password
        tenantId: tenantId
        userId: userId
      properties:
        tenantId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.Preference:
      additionalProperties: false
      example:
        code: code
        value: value
      properties:
        code:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.Tenant:
      additionalProperties: false
      example:
        roles:
        - roles
        - roles
        tenantId: tenantId
        status: null
      properties:
        tenantId:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/IdentityApi.User.V1.TenantStatus'
        roles:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    IdentityApi.User.V1.TenantStatus:
      enum:
      - Unknown
      - Active
      - Inactive
      type: string
    IdentityApi.User.V1.UpdateUserRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        phoneNumber:
          nullable: true
          type: string
        lockoutEnabled:
          type: boolean
      type: object
    IdentityApi.User.V1.UserBrowserDebugDisabledResponse:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserBrowserDebugEnabledResponse:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserListResponse:
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        tenants:
        - roles:
          - roles
          - roles
          tenantId: tenantId
          status: null
        - roles:
          - roles
          - roles
          tenantId: tenantId
          status: null
        lastModifiedDateTime: lastModifiedDateTime
        createdBy: createdBy
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        userName: userName
        userId: userId
        tenantCount: 5
        email: email
      properties:
        userId:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        tenantCount:
          format: int32
          type: integer
        tenants:
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.Tenant'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - firstName: firstName
          lastName: lastName
          tenants:
          - roles:
            - roles
            - roles
            tenantId: tenantId
            status: null
          - roles:
            - roles
            - roles
            tenantId: tenantId
            status: null
          lastModifiedDateTime: lastModifiedDateTime
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          userName: userName
          userId: userId
          tenantCount: 5
          email: email
        - firstName: firstName
          lastName: lastName
          tenants:
          - roles:
            - roles
            - roles
            tenantId: tenantId
            status: null
          - roles:
            - roles
            - roles
            tenantId: tenantId
            status: null
          lastModifiedDateTime: lastModifiedDateTime
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          userName: userName
          userId: userId
          tenantCount: 5
          email: email
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.UserListResponse'
          nullable: true
          type: array
      type: object
    IdentityApi.User.V1.UserProfileResponse:
      additionalProperties: false
      example:
        lastName: lastName
        tenants:
        - roles:
          - roles
          - roles
          tenantId: tenantId
          status: null
        - roles:
          - roles
          - roles
          tenantId: tenantId
          status: null
        preferences:
        - code: code
          value: value
        - code: code
          value: value
        lastModifiedDateTime: lastModifiedDateTime
        lockoutEnabled: lockoutEnabled
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        browserDebugEnabled: true
        userName: userName
        userId: userId
        firstName: firstName
        phoneNumber: phoneNumber
        createdBy: createdBy
        email: email
      properties:
        userId:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        phoneNumber:
          nullable: true
          type: string
        lockoutEnabled:
          nullable: true
          type: string
        tenants:
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.Tenant'
          nullable: true
          readOnly: true
          type: array
        preferences:
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.Preference'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        browserDebugEnabled:
          type: boolean
      type: object
    IdentityApi.User.V1.UserUpdatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        userId: userId
      properties:
        tenantId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
      type: object
    Microsoft.AspNetCore.Mvc.ValidationProblemDetails:
      additionalProperties: {}
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.ApprovalStatus:
      enum:
      - Unknown
      - Pending
      - Approved
      - Denied
      - Failed
      - Completed
      type: string
    RegistrationApi.Registration.V1.AzureSubscription:
      additionalProperties: false
      example:
        beneficiaryEmail: beneficiaryEmail
        purchaserEmail: purchaserEmail
        subscriptionName: subscriptionName
        subscriptionStoragePath: subscriptionStoragePath
        tenantId: tenantId
        isFreeTrial: true
        subscriptionId: subscriptionId
        applicationIds:
        - applicationIds
        - applicationIds
      properties:
        subscriptionId:
          nullable: true
          type: string
        subscriptionStoragePath:
          nullable: true
          type: string
        subscriptionName:
          nullable: true
          type: string
        beneficiaryEmail:
          nullable: true
          type: string
        purchaserEmail:
          nullable: true
          type: string
        applicationIds:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        tenantId:
          nullable: true
          type: string
        isFreeTrial:
          type: boolean
      type: object
    RegistrationApi.Registration.V1.CreateTenantRegistrationRequest:
      additionalProperties: false
      properties:
        tenantType:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantType'
        registrationId:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest:
      additionalProperties: false
      properties:
        registrationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.DenyTenantRegistrationRequest:
      additionalProperties: false
      properties:
        registrationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.RegistrationListResponse:
      additionalProperties: false
      example:
        tenantType: null
        approvalStatus: null
        submittedBy: null
        lastName: lastName
        lastModifiedDateTime: lastModifiedDateTime
        organizationName: organizationName
        azureSubscriptionStoragePath: azureSubscriptionStoragePath
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        applicationIds:
        - applicationIds
        - applicationIds
        azureSubscriptionId: azureSubscriptionId
        firstName: firstName
        createdBy: createdBy
        registrationId: registrationId
        registrationSource: registrationSource
        state: state
        email: email
      properties:
        registrationId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantType'
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        approvalStatus:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus'
        submittedBy:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy'
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        applicationIds:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        azureSubscriptionId:
          nullable: true
          type: string
        azureSubscriptionStoragePath:
          nullable: true
          type: string
        registrationSource:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - tenantType: null
          approvalStatus: null
          submittedBy: null
          lastName: lastName
          lastModifiedDateTime: lastModifiedDateTime
          organizationName: organizationName
          azureSubscriptionStoragePath: azureSubscriptionStoragePath
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          applicationIds:
          - applicationIds
          - applicationIds
          azureSubscriptionId: azureSubscriptionId
          firstName: firstName
          createdBy: createdBy
          registrationId: registrationId
          registrationSource: registrationSource
          state: state
          email: email
        - tenantType: null
          approvalStatus: null
          submittedBy: null
          lastName: lastName
          lastModifiedDateTime: lastModifiedDateTime
          organizationName: organizationName
          azureSubscriptionStoragePath: azureSubscriptionStoragePath
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          applicationIds:
          - applicationIds
          - applicationIds
          azureSubscriptionId: azureSubscriptionId
          firstName: firstName
          createdBy: createdBy
          registrationId: registrationId
          registrationSource: registrationSource
          state: state
          email: email
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponse'
          nullable: true
          type: array
      type: object
    RegistrationApi.Registration.V1.RegistrationProfileResponse:
      additionalProperties: false
      example:
        tenantType: null
        approvalStatus: null
        submittedBy: null
        lastName: lastName
        lastModifiedDateTime: lastModifiedDateTime
        organizationName: organizationName
        azureSubscriptionStoragePath: azureSubscriptionStoragePath
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        applicationIds:
        - applicationIds
        - applicationIds
        azureSubscriptionId: azureSubscriptionId
        firstName: firstName
        createdBy: createdBy
        organizationIdentifier: organizationIdentifier
        registrationId: registrationId
        registrationSource: registrationSource
        state: state
        reasonDenied: reasonDenied
        email: email
      properties:
        registrationId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantType'
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        approvalStatus:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus'
        submittedBy:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy'
        reasonDenied:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        applicationIds:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        azureSubscriptionId:
          nullable: true
          type: string
        azureSubscriptionStoragePath:
          nullable: true
          type: string
        registrationSource:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.SubmittedBy:
      enum:
      - Unknown
      - User
      - EdGraph
      type: string
    RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse:
      additionalProperties: false
      example:
        registrationId: registrationId
      properties:
        registrationId:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse:
      additionalProperties: false
      example:
        registrationId: registrationId
      properties:
        registrationId:
          nullable: true
          type: string
      type: object
    RegistrationApi.Registration.V1.TenantType:
      enum:
      - Unknown
      - Internal
      - State
      - Collaborative
      - District
      - Partner
      - Teacher
      - Student
      type: string
    RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest:
      additionalProperties: false
      properties:
        registrationId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/RegistrationApi.Registration.V1.TenantType'
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.ActivateSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.CreateSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        startDateTime:
          nullable: true
          type: string
        endDateTime:
          nullable: true
          type: string
        gracePeriod:
          format: int32
          type: integer
        numberOfLicenses:
          format: int32
          type: integer
        assignedLicenses:
          format: int32
          type: integer
        licenseType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.LicenseType'
        subscriptionStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus'
        autoAssign:
          type: boolean
      type: object
    TenantApi.Tenant.V1.CreateTenantRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantType'
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        isDemo:
          type: boolean
        enforceMfa:
          type: boolean
        tenantStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantStatus'
        domains:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders'
          nullable: true
          readOnly: true
          type: array
      type: object
    TenantApi.Tenant.V1.DeactivateSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.DeleteSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.DeleteTenantRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        reasonDeleted:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.LicenseType:
      enum:
      - Unknown
      - Full
      - Trial
      type: string
    TenantApi.Tenant.V1.RejectSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionActivatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        subscriptionId: subscriptionId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionCreatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        subscriptionId: subscriptionId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionDeactivatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        subscriptionId: subscriptionId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionListResponse:
      additionalProperties: false
      example:
        gracePeriod: 5
        actualEndDateTime: actualEndDateTime
        assignedLicenses: 2
        lastModifiedDateTime: lastModifiedDateTime
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        endDateTime: endDateTime
        numberOfLicenses: 5
        licenseType: null
        autoAssign: true
        startDateTime: startDateTime
        createdBy: createdBy
        tenantId: tenantId
        subscriptionStatus: null
        subscriptionId: subscriptionId
        applicationId: applicationId
        lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
        maxAssignedLicenses: 7
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        startDateTime:
          nullable: true
          type: string
        endDateTime:
          nullable: true
          type: string
        actualEndDateTime:
          nullable: true
          type: string
        gracePeriod:
          format: int32
          type: integer
        numberOfLicenses:
          format: int32
          type: integer
        assignedLicenses:
          format: int32
          type: integer
        maxAssignedLicenses:
          format: int32
          type: integer
        lastMaxAssignedLicensesDateTime:
          nullable: true
          type: string
        licenseType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.LicenseType'
        subscriptionStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus'
        autoAssign:
          type: boolean
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - gracePeriod: 5
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 2
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 5
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 7
        - gracePeriod: 5
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 2
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 5
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 7
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse'
          nullable: true
          type: array
      type: object
    TenantApi.Tenant.V1.SubscriptionProfileResponse:
      additionalProperties: false
      example:
        gracePeriod: 0
        actualEndDateTime: actualEndDateTime
        assignedLicenses: 1
        lastModifiedDateTime: lastModifiedDateTime
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        endDateTime: endDateTime
        numberOfLicenses: 6
        licenseType: null
        autoAssign: true
        startDateTime: startDateTime
        createdBy: createdBy
        tenantId: tenantId
        subscriptionStatus: null
        subscriptionId: subscriptionId
        applicationId: applicationId
        lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
        maxAssignedLicenses: 5
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
        startDateTime:
          nullable: true
          type: string
        endDateTime:
          nullable: true
          type: string
        actualEndDateTime:
          nullable: true
          type: string
        gracePeriod:
          format: int32
          type: integer
        numberOfLicenses:
          format: int32
          type: integer
        assignedLicenses:
          format: int32
          type: integer
        maxAssignedLicenses:
          format: int32
          type: integer
        lastMaxAssignedLicensesDateTime:
          nullable: true
          type: string
        licenseType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.LicenseType'
        subscriptionStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus'
        autoAssign:
          type: boolean
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionRejectedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        subscriptionId: subscriptionId
        applicationId: applicationId
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        applicationId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.SubscriptionStatus:
      enum:
      - Unknown
      - Active
      - Inactive
      - Pending
      - Rejected
      type: string
    TenantApi.Tenant.V1.SubscriptionUpdatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        subscriptionId: subscriptionId
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.TenantCreatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.TenantIdentityProviders:
      enum:
      - Local
      - Aad
      - Google
      - Adfs
      type: string
    TenantApi.Tenant.V1.TenantListResponse:
      additionalProperties: false
      example:
        tenantType: null
        tenantStatus: null
        subscriptionsMigrated: true
        subscriptions:
        - gracePeriod: 5
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 2
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 5
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 7
        - gracePeriod: 5
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 2
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 5
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 7
        identityProviders:
        - null
        - null
        lastModifiedDateTime: lastModifiedDateTime
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        domains:
        - domains
        - domains
        createdDateTime: createdDateTime
        isDemo: true
        enforceMfa: true
        createdBy: createdBy
        organizationIdentifier: organizationIdentifier
        tenantId: tenantId
        state: state
      properties:
        tenantId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantType'
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        tenantStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantStatus'
        isDemo:
          type: boolean
        enforceMfa:
          type: boolean
        subscriptionsMigrated:
          type: boolean
        subscriptions:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse'
          nullable: true
          readOnly: true
          type: array
        domains:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        identityProviders:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders'
          nullable: true
          readOnly: true
          type: array
      type: object
    TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - tenantType: null
          tenantStatus: null
          subscriptionsMigrated: true
          subscriptions:
          - gracePeriod: 5
            actualEndDateTime: actualEndDateTime
            assignedLicenses: 2
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            endDateTime: endDateTime
            numberOfLicenses: 5
            licenseType: null
            autoAssign: true
            startDateTime: startDateTime
            createdBy: createdBy
            tenantId: tenantId
            subscriptionStatus: null
            subscriptionId: subscriptionId
            applicationId: applicationId
            lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
            maxAssignedLicenses: 7
          - gracePeriod: 5
            actualEndDateTime: actualEndDateTime
            assignedLicenses: 2
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            endDateTime: endDateTime
            numberOfLicenses: 5
            licenseType: null
            autoAssign: true
            startDateTime: startDateTime
            createdBy: createdBy
            tenantId: tenantId
            subscriptionStatus: null
            subscriptionId: subscriptionId
            applicationId: applicationId
            lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
            maxAssignedLicenses: 7
          identityProviders:
          - null
          - null
          lastModifiedDateTime: lastModifiedDateTime
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          domains:
          - domains
          - domains
          createdDateTime: createdDateTime
          isDemo: true
          enforceMfa: true
          createdBy: createdBy
          organizationIdentifier: organizationIdentifier
          tenantId: tenantId
          state: state
        - tenantType: null
          tenantStatus: null
          subscriptionsMigrated: true
          subscriptions:
          - gracePeriod: 5
            actualEndDateTime: actualEndDateTime
            assignedLicenses: 2
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            endDateTime: endDateTime
            numberOfLicenses: 5
            licenseType: null
            autoAssign: true
            startDateTime: startDateTime
            createdBy: createdBy
            tenantId: tenantId
            subscriptionStatus: null
            subscriptionId: subscriptionId
            applicationId: applicationId
            lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
            maxAssignedLicenses: 7
          - gracePeriod: 5
            actualEndDateTime: actualEndDateTime
            assignedLicenses: 2
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            endDateTime: endDateTime
            numberOfLicenses: 5
            licenseType: null
            autoAssign: true
            startDateTime: startDateTime
            createdBy: createdBy
            tenantId: tenantId
            subscriptionStatus: null
            subscriptionId: subscriptionId
            applicationId: applicationId
            lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
            maxAssignedLicenses: 7
          identityProviders:
          - null
          - null
          lastModifiedDateTime: lastModifiedDateTime
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          domains:
          - domains
          - domains
          createdDateTime: createdDateTime
          isDemo: true
          enforceMfa: true
          createdBy: createdBy
          organizationIdentifier: organizationIdentifier
          tenantId: tenantId
          state: state
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantListResponse'
          nullable: true
          type: array
      type: object
    TenantApi.Tenant.V1.TenantProfileResponse:
      additionalProperties: false
      example:
        tenantType: null
        tenantStatus: null
        subscriptionsMigrated: true
        subscriptions:
        - gracePeriod: 0
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 1
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 6
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 5
        - gracePeriod: 0
          actualEndDateTime: actualEndDateTime
          assignedLicenses: 1
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          endDateTime: endDateTime
          numberOfLicenses: 6
          licenseType: null
          autoAssign: true
          startDateTime: startDateTime
          createdBy: createdBy
          tenantId: tenantId
          subscriptionStatus: null
          subscriptionId: subscriptionId
          applicationId: applicationId
          lastMaxAssignedLicensesDateTime: lastMaxAssignedLicensesDateTime
          maxAssignedLicenses: 5
        identityProviders:
        - null
        - null
        lastModifiedDateTime: lastModifiedDateTime
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        domains:
        - domains
        - domains
        createdDateTime: createdDateTime
        isDemo: true
        enforceMfa: true
        createdBy: createdBy
        organizationIdentifier: organizationIdentifier
        tenantId: tenantId
        state: state
      properties:
        tenantId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantType'
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        tenantStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantStatus'
        isDemo:
          type: boolean
        enforceMfa:
          type: boolean
        subscriptionsMigrated:
          type: boolean
        subscriptions:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse'
          nullable: true
          readOnly: true
          type: array
        domains:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        identityProviders:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders'
          nullable: true
          readOnly: true
          type: array
      type: object
    TenantApi.Tenant.V1.TenantStatus:
      enum:
      - Unknown
      - Active
      - Inactive
      type: string
    TenantApi.Tenant.V1.TenantType:
      enum:
      - Unknown
      - Internal
      - State
      - Collaborative
      - District
      - Partner
      - Teacher
      - Student
      type: string
    TenantApi.Tenant.V1.TenantUpdatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
      type: object
    TenantApi.Tenant.V1.UpdateSubscriptionRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        startDateTime:
          nullable: true
          type: string
        endDateTime:
          nullable: true
          type: string
        gracePeriod:
          format: int32
          type: integer
        numberOfLicenses:
          format: int32
          type: integer
        assignedLicenses:
          format: int32
          type: integer
        licenseType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.LicenseType'
        autoAssign:
          description: SubscriptionStatus SubscriptionStatus = 10;
          type: boolean
      type: object
    TenantApi.Tenant.V1.UpdateTenantRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        tenantType:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantType'
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        isDemo:
          type: boolean
        enforceMfa:
          type: boolean
        tenantStatus:
          $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantStatus'
        domains:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders'
          nullable: true
          readOnly: true
          type: array
      type: object
  securitySchemes:
    oauth2:
      description: Use bearer token generated from an OpenId server
      flows:
        clientCredentials:
          scopes:
            https://api.edgraph.com/auth/management: EdGraph Platform - Management
              Api
          tokenUrl: https://login.edgraph.com/connect/token
      type: oauth2

